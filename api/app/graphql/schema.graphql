type Album {
  albumArt: Image
  albumType: String
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioTransfersCount: Int
  description: String
  externalId: String
  id: ID
  releaseDate: ISO8601Date
  slug: String
  title: String
}

type AudioTransfer {
  album: Album
  albumId: String
  audioFile: File
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601Date
  filename: String
  id: ID
  playlistAudioTransfer(id: ID!): PlaylistAudioTransfer!
  playlistAudioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaylistAudioTransferConnection!
  position: Int
  recording: Recording
  recordingId: String
  transferAgent: TransferAgent
  transferAgentId: String
  updatedAt: ISO8601Date
}

"""
The connection type for AudioTransfer.
"""
type AudioTransferConnection {
  """
  A list of edges.
  """
  edges: [AudioTransferEdge!]!

  """
  A list of nodes.
  """
  nodes: [AudioTransfer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AudioTransferEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AudioTransfer
}

type AudioVariant {
  audioFile: File!
  audioTransfer: AudioTransfer!
  audioTransferId: String!
  bitRate: Int
  channels: Int
  codec: String!
  createdAt: ISO8601DateTime!
  duration: Int!
  format: String!
  id: ID!
  length: Int!
  metadata: JSON!
  sampleRate: Int
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AudioVariant.
"""
type AudioVariantConnection {
  """
  A list of edges.
  """
  edges: [AudioVariantEdge!]!

  """
  A list of nodes.
  """
  nodes: [AudioVariant!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AudioVariantEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AudioVariant
}

type Composer {
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  compositionsCount: Int
  deathDate: ISO8601Date
  id: ID
  name: String!
  rank: Int
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  slug: String
  sortName: String
}

"""
The connection type for Composer.
"""
type ComposerConnection {
  """
  A list of edges.
  """
  edges: [ComposerEdge!]!

  """
  A list of nodes.
  """
  nodes: [Composer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ComposerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Composer
}

type Composition {
  composer: Composer!
  composerId: String!
  id: ID
  lyric(id: ID!): Lyric!
  lyricist: Lyricist!
  lyricistId: String!
  lyrics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricConnection!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  tangotubeSlug: String
  title: String
}

"""
The connection type for Composition.
"""
type CompositionConnection {
  """
  A list of edges.
  """
  edges: [CompositionEdge!]!

  """
  A list of nodes.
  """
  nodes: [Composition!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CompositionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Composition
}

type ElRecodoSong {
  album: String
  artist: String
  author: String
  composer: String
  date: ISO8601Date
  ertNumber: Int
  id: ID
  label: String
  lyrics: String
  musicId: Int
  orchestra: String
  recording: Recording!
  recordingId: String!
  singer: String
  style: String
  title: String
}

"""
The connection type for ElRecodoSong.
"""
type ElRecodoSongConnection {
  """
  A list of edges.
  """
  edges: [ElRecodoSongEdge!]!

  """
  A list of nodes.
  """
  nodes: [ElRecodoSong!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ElRecodoSongEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ElRecodoSong
}

type Event {
  action: String!
  createdAt: ISO8601DateTime!
  id: ID!
  ipAddress: String
  updatedAt: ISO8601DateTime!
  user: User!
  userAgent: String
  userId: String!
}

"""
The connection type for Event.
"""
type EventConnection {
  """
  A list of edges.
  """
  edges: [EventEdge!]!

  """
  A list of nodes.
  """
  nodes: [Event!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type EventEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Event
}

type File {
  filename: String!
  id: ID!
  url: String!
}

type Genre {
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Genre.
"""
type GenreConnection {
  """
  A list of edges.
  """
  edges: [GenreEdge!]!

  """
  A list of nodes.
  """
  nodes: [Genre!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type GenreEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Genre
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Image {
  id: ID!
  url: String!
}

"""
Represents untyped JSON
"""
scalar JSON

type Lyric {
  composition: Composition!
  compositionId: String!
  content: String
  createdAt: ISO8601Date
  id: ID
  locale: String
  updatedAt: ISO8601Date
}

"""
The connection type for Lyric.
"""
type LyricConnection {
  """
  A list of edges.
  """
  edges: [LyricEdge!]!

  """
  A list of nodes.
  """
  nodes: [Lyric!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LyricEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Lyric
}

type Lyricist {
  bio: String
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  deathDate: ISO8601Date
  id: ID
  lyric(id: ID!): Lyric!
  lyrics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricConnection!
  name: String
  rank: Int
  slug: String
  sortName: String
}

"""
The connection type for Lyricist.
"""
type LyricistConnection {
  """
  A list of edges.
  """
  edges: [LyricistEdge!]!

  """
  A list of nodes.
  """
  nodes: [Lyricist!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LyricistEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Lyricist
}

type Mutation {
  login(
    """
    Parameters for signIn
    """
    input: signInInput!
  ): signInPayload
  register(
    """
    Parameters for register
    """
    input: registerInput!
  ): registerPayload
}

type Orchestra {
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  deathDate: ISO8601Date
  id: ID
  lyricist(id: ID!): Lyricist!
  lyricists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricistConnection!
  name: String
  rank: Int
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  recordingsCount: Int
  singer(id: ID!): Singer!
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SingerConnection!
  slug: String
  sortName: String
}

"""
The connection type for Orchestra.
"""
type OrchestraConnection {
  """
  A list of edges.
  """
  edges: [OrchestraEdge!]!

  """
  A list of nodes.
  """
  nodes: [Orchestra!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OrchestraEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Orchestra
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Period {
  description: String
  endYear: Int
  id: ID
  name: String
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  recordingsCount: Int
  slug: String
  startYear: Int
}

"""
The connection type for Period.
"""
type PeriodConnection {
  """
  A list of edges.
  """
  edges: [PeriodEdge!]!

  """
  A list of nodes.
  """
  nodes: [Period!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PeriodEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Period
}

type Playlist {
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601DateTime!
  description: String
  followersCount: Int!
  id: ID!
  image: Image
  likesCount: Int!
  listensCount: Int!
  playlistAudioTransfer(id: ID!): PlaylistAudioTransfer!
  playlistAudioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaylistAudioTransferConnection!
  public: Boolean!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  sharesCount: Int!
  songsCount: Int!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
  userId: String!
}

type PlaylistAudioTransfer {
  audioTransfer: AudioTransfer!
  audioTransferId: String!
  createdAt: ISO8601DateTime!
  id: ID!
  playlist: Playlist!
  playlistId: String!
  position: Int!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for PlaylistAudioTransfer.
"""
type PlaylistAudioTransferConnection {
  """
  A list of edges.
  """
  edges: [PlaylistAudioTransferEdge!]!

  """
  A list of nodes.
  """
  nodes: [PlaylistAudioTransfer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PlaylistAudioTransferEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PlaylistAudioTransfer
}

"""
The connection type for Playlist.
"""
type PlaylistConnection {
  """
  A list of edges.
  """
  edges: [PlaylistEdge!]!

  """
  A list of nodes.
  """
  nodes: [Playlist!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PlaylistEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Playlist
}

type Query {
  """
  Get audio by ID.
  """
  audioVariant(
    """
    ID of the audio.
    """
    id: ID!
  ): AudioVariant!

  """
  Get composer by ID.
  """
  composer(
    """
    ID of the composer.
    """
    id: ID!
  ): Composer!

  """
  Get all composers.
  """
  composers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): ComposerConnection!

  """
  Search for El Recodo songs.
  """
  elRecodoSongs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): ElRecodoSongConnection!

  """
  Get genre by ID.
  """
  genre(
    """
    ID of the genre.
    """
    id: ID!
  ): Genre!

  """
  Get all genres.
  """
  genres(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): GenreConnection!

  """
  Get lyricist by ID.
  """
  lyricist(
    """
    ID of the lyricist.
    """
    id: ID!
  ): Lyricist!

  """
  Get all lyricists.
  """
  lyricists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): LyricistConnection!

  """
  Get orchestra by ID.
  """
  orchestra(
    """
    ID of the orchestra.
    """
    id: ID!
  ): Orchestra!

  """
  Get all orchestras.
  """
  orchestras(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): OrchestraConnection!

  """
  Get period by ID.
  """
  period(
    """
    ID of the period.
    """
    id: ID!
  ): Period!

  """
  Get all periods.
  """
  periods(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): PeriodConnection!

  """
  Get playlist by ID.
  """
  playlist(
    """
    ID of the playlist.
    """
    id: ID!
  ): Playlist!

  """
  Get all playlists.
  """
  playlists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): PlaylistConnection!

  """
  Get recording by ID.
  """
  recording(
    """
    ID of the recording.
    """
    id: ID!
  ): Recording!

  """
  Search for recordings.
  """
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): RecordingConnection!

  """
  Get singer by ID.
  """
  singer(
    """
    ID of the singer.
    """
    id: ID!
  ): Singer!

  """
  Get all singers.
  """
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): SingerConnection!

  """
  Get the profile of the currently authenticated user.
  """
  user(
    """
    ID of the user.
    """
    id: ID!
  ): User!

  """
  Get the profile of the currently authenticated user.
  """
  userProfile: User!

  """
  Get all users.
  """
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Query to search for.
    """
    query: String
  ): UserConnection!

  """
  Who am I
  """
  whoAmI: String!
}

type RecordLabel {
  description: String
  foundedDate: ISO8601Date
  id: ID
  name: String
}

type Recording {
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  bpm: Int
  composer: Composer!
  composerId: String!
  composition: Composition!
  compositionId: String!
  elRecodoSong: ElRecodoSong!
  elRecodoSongId: String!
  genre: Genre!
  genreId: String!
  id: ID!
  lyricist: Lyricist!
  lyricistId: String!
  orchestra: Orchestra!
  orchestraId: String!
  period: Period!
  periodId: String!
  recordLabel: RecordLabel!
  recordLabelId: String!
  recordedDate: ISO8601Date
  recordingType: String!
  releaseDate: ISO8601Date
  singer(id: ID!): Singer!
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SingerConnection!
  slug: String!
  title: String!
  waveform(id: ID!): Waveform!
  waveforms(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): WaveformConnection!
}

"""
The connection type for Recording.
"""
type RecordingConnection {
  """
  A list of edges.
  """
  edges: [RecordingEdge!]!

  """
  A list of nodes.
  """
  nodes: [Recording!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Recording
}

type RecordingSinger {
  createdAt: ISO8601DateTime!
  id: ID!
  recording: Recording!
  recordingId: String!
  singer: Singer!
  singerId: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for RecordingSinger.
"""
type RecordingSingerConnection {
  """
  A list of edges.
  """
  edges: [RecordingSingerEdge!]!

  """
  A list of nodes.
  """
  nodes: [RecordingSinger!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordingSingerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RecordingSinger
}

type Session {
  createdAt: ISO8601DateTime!
  id: ID!
  ipAddress: String
  updatedAt: ISO8601DateTime!
  user: User!
  userAgent: String
  userId: String!
}

"""
The connection type for Session.
"""
type SessionConnection {
  """
  A list of edges.
  """
  edges: [SessionEdge!]!

  """
  A list of nodes.
  """
  nodes: [Session!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type SessionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Session
}

type Singer {
  bio: String
  birthDate: ISO8601Date
  deathDate: ISO8601Date
  id: ID
  name: String
  rank: Int
  recording(id: ID!): Recording!
  recordingSinger(id: ID!): RecordingSinger!
  recordingSingers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingSingerConnection!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  slug: String
  sortName: String
}

"""
The connection type for Singer.
"""
type SingerConnection {
  """
  A list of edges.
  """
  edges: [SingerEdge!]!

  """
  A list of nodes.
  """
  nodes: [Singer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type SingerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Singer
}

type TransferAgent {
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  updatedAt: ISO8601DateTime!
  url: String
}

type User {
  admin: Boolean!
  avatarUrl: String
  createdAt: ISO8601DateTime!
  email: String!
  event(id: ID!): Event!
  events(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EventConnection!
  firstName: String
  id: ID!
  lastName: String
  name: String!
  passwordDigest: String!
  provider: String
  session(id: ID!): Session!
  sessions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SessionConnection!
  uid: String
  updatedAt: ISO8601DateTime!
  username: String!
  verified: Boolean!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  A list of nodes.
  """
  nodes: [User!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

type ValidationErrors {
  details: String!
  fullMessages: [String!]!
}

type Waveform {
  audioTransfer: AudioTransfer!
  audioTransferId: String!
  bits: Int!
  channels: Int!
  createdAt: ISO8601DateTime!
  data: [Float!]!
  id: ID!
  image: Image
  length: Int!
  sampleRate: Int!
  samplesPerPixel: Int!
  updatedAt: ISO8601DateTime!
  version: Int!
}

"""
The connection type for Waveform.
"""
type WaveformConnection {
  """
  A list of edges.
  """
  edges: [WaveformEdge!]!

  """
  A list of nodes.
  """
  nodes: [Waveform!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type WaveformEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Waveform
}

"""
Autogenerated input type of register
"""
input registerInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  username: String!
}

"""
Autogenerated return type of register.
"""
type registerPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: ValidationErrors
  success: Boolean
  user: User
}

"""
Autogenerated input type of signIn
"""
input signInInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  login: String!
  password: String!
}

"""
Autogenerated return type of signIn.
"""
type signInPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  token: String
  user: User
}
