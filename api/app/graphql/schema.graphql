"""
Autogenerated input type of AddLikeToRecording
"""
input AddLikeToRecordingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  recordingId: ID!
}

"""
Autogenerated return type of AddLikeToRecording.
"""
type AddLikeToRecordingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  like: Like
  success: Boolean!
}

"""
Autogenerated input type of AddPlaylistRecording
"""
input AddPlaylistRecordingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlistId: ID!
  recordingId: ID!
}

"""
Autogenerated return type of AddPlaylistRecording.
"""
type AddPlaylistRecordingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  playlistItem: PlaylistItem
  success: Boolean
}

type Album {
  albumArtUrl: String
  albumType: String
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioTransfersCount: Int
  description: String
  externalId: String
  id: ID
  releaseDate: ISO8601Date
  slug: String
  title: String
}

"""
Autogenerated input type of AppleLogin
"""
input AppleLoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
  firstName: String
  identityToken: String!
  lastName: String
  userIdentifier: String!
}

"""
Autogenerated return type of AppleLogin.
"""
type AppleLoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  token: String
  user: User
}

type AudioTransfer {
  album: Album
  albumId: String
  audioFileUrl: String
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601Date
  filename: String
  id: ID
  playlistItem(id: ID!): PlaylistItem!
  playlistItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaylistItemConnection!
  position: Int
  recording: Recording
  recordingId: String
  transferAgent: TransferAgent
  transferAgentId: String
  updatedAt: ISO8601Date
  waveform: Waveform
}

"""
The connection type for AudioTransfer.
"""
type AudioTransferConnection {
  """
  A list of edges.
  """
  edges: [AudioTransferEdge!]!

  """
  A list of nodes.
  """
  nodes: [AudioTransfer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AudioTransferEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AudioTransfer
}

type AudioVariant {
  audioFileUrl: String
  audioTransfer: AudioTransfer!
  audioTransferId: String!
  bitRate: Int
  channels: Int
  codec: String!
  createdAt: ISO8601DateTime!
  duration: Int!
  format: String!
  id: ID!
  length: Int!
  metadata: JSON!
  sampleRate: Int
  updatedAt: ISO8601DateTime!
}

"""
The connection type for AudioVariant.
"""
type AudioVariantConnection {
  """
  A list of edges.
  """
  edges: [AudioVariantEdge!]!

  """
  A list of nodes.
  """
  nodes: [AudioVariant!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type AudioVariantEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: AudioVariant
}

"""
Autogenerated input type of ChangePlaylistItemPosition
"""
input ChangePlaylistItemPositionInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlistItemId: ID!
  position: Int!
}

"""
Autogenerated return type of ChangePlaylistItemPosition.
"""
type ChangePlaylistItemPositionPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  playlistItem: PlaylistItem
  success: Boolean
}

type Composer {
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  compositionsCount: Int
  deathDate: ISO8601Date
  id: ID
  name: String!
  photoUrl: String
  rank: Int
  slug: String
  sortName: String
}

"""
The connection type for Composer.
"""
type ComposerConnection {
  """
  A list of edges.
  """
  edges: [ComposerEdge!]!

  """
  A list of nodes.
  """
  nodes: [Composer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ComposerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Composer
}

type Composition {
  composer: Composer
  composerId: String
  id: ID
  lyric(id: ID!): Lyric!
  lyricist: Lyricist
  lyricistId: String
  lyrics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricConnection!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  tangotubeSlug: String
  title: String
}

"""
The connection type for Composition.
"""
type CompositionConnection {
  """
  A list of edges.
  """
  edges: [CompositionEdge!]!

  """
  A list of nodes.
  """
  nodes: [Composition!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type CompositionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Composition
}

"""
Autogenerated input type of CreatePlayback
"""
input CreatePlaybackInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  recordingId: ID!
}

"""
Autogenerated return type of CreatePlayback.
"""
type CreatePlaybackPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  playback: Playback
  success: Boolean
}

"""
Autogenerated input type of CreatePlaylist
"""
input CreatePlaylistInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  image: Upload
  itemIds: [ID!]
  public: Boolean
  title: String!
}

"""
Autogenerated return type of CreatePlaylist.
"""
type CreatePlaylistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  playlist: Playlist
  success: Boolean
}

"""
Autogenerated input type of DeletePlaylist
"""
input DeletePlaylistInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of DeletePlaylist.
"""
type DeletePlaylistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  success: Boolean!
}

type ElRecodoSong {
  album: String
  artist: String
  author: String
  composer: String
  date: ISO8601Date
  ertNumber: Int
  id: ID
  label: String
  lyrics: String
  musicId: Int
  orchestra: String
  recording: Recording!
  recordingId: String!
  singer: String
  style: String
  title: String
}

"""
The connection type for ElRecodoSong.
"""
type ElRecodoSongConnection {
  """
  A list of edges.
  """
  edges: [ElRecodoSongEdge!]!

  """
  A list of nodes.
  """
  nodes: [ElRecodoSong!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type ElRecodoSongEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: ElRecodoSong
}

type Event {
  action: String!
  createdAt: ISO8601DateTime!
  id: ID!
  ipAddress: String
  updatedAt: ISO8601DateTime!
  user: User!
  userAgent: String
  userId: String!
}

"""
The connection type for Event.
"""
type EventConnection {
  """
  A list of edges.
  """
  edges: [EventEdge!]!

  """
  A list of nodes.
  """
  nodes: [Event!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type EventEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Event
}

type Genre {
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Genre.
"""
type GenreConnection {
  """
  A list of edges.
  """
  edges: [GenreEdge!]!

  """
  A list of nodes.
  """
  nodes: [Genre!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type GenreEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Genre
}

"""
Autogenerated input type of GoogleLogin
"""
input GoogleLoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  idToken: String!
}

"""
Autogenerated return type of GoogleLogin.
"""
type GoogleLoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  token: String
  user: User
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

"""
Represents untyped JSON
"""
scalar JSON

type Like {
  createdAt: ISO8601DateTime!
  errors: ValidationErrors
  id: ID!
  likeableId: ID!
  likeableType: String!
  user: User!
}

"""
The connection type for Like.
"""
type LikeConnection {
  """
  A list of edges.
  """
  edges: [LikeEdge!]!

  """
  A list of nodes.
  """
  nodes: [Like!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LikeEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Like
}

"""
Autogenerated input type of LoginUser
"""
input LoginUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  login: String!
  password: String!
}

"""
Autogenerated return type of LoginUser.
"""
type LoginUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  token: String
  user: User
}

type Lyric {
  composition: Composition!
  compositionId: String!
  content: String
  createdAt: ISO8601Date
  id: ID
  locale: String
  updatedAt: ISO8601Date
}

"""
The connection type for Lyric.
"""
type LyricConnection {
  """
  A list of edges.
  """
  edges: [LyricEdge!]!

  """
  A list of nodes.
  """
  nodes: [Lyric!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LyricEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Lyric
}

type Lyricist {
  bio: String
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  deathDate: ISO8601Date
  firstName: String
  id: ID
  lastName: String
  lyric(id: ID!): Lyric!
  lyrics(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricConnection!
  name: String
  photoUrl: String
  rank: Int
  slug: String
  sortName: String
}

"""
The connection type for Lyricist.
"""
type LyricistConnection {
  """
  A list of edges.
  """
  edges: [LyricistEdge!]!

  """
  A list of nodes.
  """
  nodes: [Lyricist!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LyricistEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Lyricist
}

type Mutation {
  addLikeToRecording(
    """
    Parameters for AddLikeToRecording
    """
    input: AddLikeToRecordingInput!
  ): AddLikeToRecordingPayload
  addPlaylistRecording(
    """
    Parameters for AddPlaylistRecording
    """
    input: AddPlaylistRecordingInput!
  ): AddPlaylistRecordingPayload
  appleLogin(
    """
    Parameters for AppleLogin
    """
    input: AppleLoginInput!
  ): AppleLoginPayload
  changePlaylistItemPosition(
    """
    Parameters for ChangePlaylistItemPosition
    """
    input: ChangePlaylistItemPositionInput!
  ): ChangePlaylistItemPositionPayload
  createPlayback(
    """
    Parameters for CreatePlayback
    """
    input: CreatePlaybackInput!
  ): CreatePlaybackPayload
  createPlaylist(
    """
    Parameters for CreatePlaylist
    """
    input: CreatePlaylistInput!
  ): CreatePlaylistPayload
  deletePlaylist(
    """
    Parameters for DeletePlaylist
    """
    input: DeletePlaylistInput!
  ): DeletePlaylistPayload
  googleLogin(
    """
    Parameters for GoogleLogin
    """
    input: GoogleLoginInput!
  ): GoogleLoginPayload
  login(
    """
    Parameters for LoginUser
    """
    input: LoginUserInput!
  ): LoginUserPayload
  register(
    """
    Parameters for RegisterUser
    """
    input: RegisterUserInput!
  ): RegisterUserPayload
  removeLikeFromRecording(
    """
    Parameters for RemoveLikeFromRecording
    """
    input: RemoveLikeFromRecordingInput!
  ): RemoveLikeFromRecordingPayload
  removePlayback(
    """
    Parameters for RemovePlayback
    """
    input: RemovePlaybackInput!
  ): RemovePlaybackPayload
  removePlaylistItem(
    """
    Parameters for RemovePlaylistItem
    """
    input: RemovePlaylistItemInput!
  ): RemovePlaylistItemPayload
  updatePlaylist(
    """
    Parameters for UpdatePlaylist
    """
    input: UpdatePlaylistInput!
  ): UpdatePlaylistPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
}

type Orchestra {
  birthDate: ISO8601Date
  composition(id: ID!): Composition!
  compositions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): CompositionConnection!
  deathDate: ISO8601Date
  firstName: String
  id: ID
  lastName: String
  lyricist(id: ID!): Lyricist!
  lyricists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LyricistConnection!
  name: String
  photoUrl: String
  rank: Int
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  recordingsCount: Int
  singer(id: ID!): Singer!
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SingerConnection!
  slug: String
  sortName: String
}

"""
The connection type for Orchestra.
"""
type OrchestraConnection {
  """
  A list of edges.
  """
  edges: [OrchestraEdge!]!

  """
  A list of nodes.
  """
  nodes: [Orchestra!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OrchestraEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Orchestra
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Period {
  description: String
  endYear: Int
  id: ID
  imageUrl: String
  name: String
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  recordingsCount: Int
  slug: String
  startYear: Int
}

"""
The connection type for Period.
"""
type PeriodConnection {
  """
  A list of edges.
  """
  edges: [PeriodEdge!]!

  """
  A list of nodes.
  """
  nodes: [Period!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PeriodEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Period
}

union Playable = Recording

type Playback {
  createdAt: ISO8601DateTime!
  id: ID!
  recording: Recording!
  recordingId: String!
  user: User!
  userId: String!
}

"""
The connection type for Playback.
"""
type PlaybackConnection {
  """
  A list of edges.
  """
  edges: [PlaybackEdge!]!

  """
  A list of nodes.
  """
  nodes: [Playback!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PlaybackEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Playback
}

type Playlist {
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601DateTime!
  description: String
  followersCount: Int!
  id: ID!
  imageUrl: String
  likesCount: Int!
  listensCount: Int!
  playlistItem(id: ID!): PlaylistItem!
  playlistItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaylistItemConnection!
  public: Boolean!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  sharesCount: Int!
  songsCount: Int!
  system: Boolean!
  title: String!
  updatedAt: ISO8601DateTime!
  user: User!
  userId: String!
}

"""
The connection type for Playlist.
"""
type PlaylistConnection {
  """
  A list of edges.
  """
  edges: [PlaylistEdge!]!

  """
  A list of nodes.
  """
  nodes: [Playlist!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PlaylistEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Playlist
}

type PlaylistItem {
  createdAt: ISO8601DateTime!
  id: ID!
  playable: Playable!
  playableId: String!
  playableType: String!
  playlist: Playlist!
  playlistId: String!
  position: Int!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for PlaylistItem.
"""
type PlaylistItemConnection {
  """
  A list of edges.
  """
  edges: [PlaylistItemEdge!]!

  """
  A list of nodes.
  """
  nodes: [PlaylistItem!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type PlaylistItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: PlaylistItem
}

type Query {
  audioTransfer(
    """
    ID of the audio transfer.
    """
    id: ID!
  ): AudioTransfer!
  audioVariant(
    """
    ID of the audio variant.
    """
    id: ID!
  ): AudioVariant!
  composer(
    """
    ID of the composer.
    """
    id: ID!
  ): Composer!
  composers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String
  ): ComposerConnection!
  currentUser: User!
  elRecodoSongs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String
  ): ElRecodoSongConnection!
  genre(id: ID!): Genre!
  genres(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    query: String
  ): GenreConnection!
  likedRecordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Sort order, can be 'asc' or 'desc'.
    """
    order: String

    """
    Query to search for.
    """
    query: String

    """
    Field to sort by.
    """
    sortBy: String
  ): RecordingConnection!
  lyricist(
    """
    ID of the lyricist.
    """
    id: ID!
  ): Lyricist!
  lyricists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String
  ): LyricistConnection!
  orchestra(id: ID!): Orchestra!
  orchestras(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    query: String
  ): OrchestraConnection!
  period(
    """
    ID of the period.
    """
    id: ID!
  ): Period!
  periods(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String
  ): PeriodConnection!
  playlist(id: ID!): Playlist!
  playlists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String
  ): PlaylistConnection!
  recording(
    """
    ID of the recording.
    """
    id: ID!
  ): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Sort order, can be 'asc' or 'desc'.
    """
    order: String

    """
    Query to search for.
    """
    query: String

    """
    Field to sort by.
    """
    sortBy: String
  ): RecordingConnection!
  singer(
    """
    ID of the singer.
    """
    id: ID!
  ): Singer!
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    query: String
  ): SingerConnection!
  user(
    """
    ID of the user.
    """
    id: ID!
  ): User!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Search query.
    """
    query: String!
  ): UserConnection!
}

type RecordLabel {
  description: String
  foundedDate: ISO8601Date
  id: ID
  name: String
}

type Recording {
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  bpm: Int
  composer: Composer
  composerId: String
  composition: Composition
  compositionId: String
  elRecodoSong: ElRecodoSong
  elRecodoSongId: String
  genre: Genre!
  genreId: String!
  id: ID!
  like(id: ID!): Like!
  likes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LikeConnection!
  lyricist: Lyricist
  lyricistId: String
  orchestra: Orchestra!
  orchestraId: String!
  period: Period
  periodId: String
  playback(id: ID!): Playback!
  playbacks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaybackConnection!
  recordLabel: RecordLabel
  recordLabelId: String
  recordedDate: ISO8601Date
  recordingType: String!
  releaseDate: ISO8601Date
  singer(id: ID!): Singer!
  singers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SingerConnection!
  slug: String!
  title: String!
  year: Int
}

"""
The connection type for Recording.
"""
type RecordingConnection {
  """
  A list of edges.
  """
  edges: [RecordingEdge!]!

  """
  A list of nodes.
  """
  nodes: [Recording!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Recording
}

type RecordingSinger {
  createdAt: ISO8601DateTime!
  id: ID!
  recording: Recording!
  recordingId: String!
  singer: Singer!
  singerId: String!
  updatedAt: ISO8601DateTime!
}

"""
The connection type for RecordingSinger.
"""
type RecordingSingerConnection {
  """
  A list of edges.
  """
  edges: [RecordingSingerEdge!]!

  """
  A list of nodes.
  """
  nodes: [RecordingSinger!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RecordingSingerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: RecordingSinger
}

"""
Autogenerated input type of RegisterUser
"""
input RegisterUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
  username: String!
}

"""
Autogenerated return type of RegisterUser.
"""
type RegisterUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  user: User
}

"""
Autogenerated input type of RemoveLikeFromRecording
"""
input RemoveLikeFromRecordingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  recordingId: ID!
}

"""
Autogenerated return type of RemoveLikeFromRecording.
"""
type RemoveLikeFromRecordingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  success: Boolean!
}

"""
Autogenerated input type of RemovePlayback
"""
input RemovePlaybackInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RemovePlayback.
"""
type RemovePlaybackPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  message: String!
  success: Boolean!
}

"""
Autogenerated input type of RemovePlaylistItem
"""
input RemovePlaylistItemInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  playlistItemId: ID!
}

"""
Autogenerated return type of RemovePlaylistItem.
"""
type RemovePlaylistItemPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  success: Boolean!
}

type Session {
  createdAt: ISO8601DateTime!
  id: ID!
  ipAddress: String
  updatedAt: ISO8601DateTime!
  user: User!
  userAgent: String
  userId: String!
}

"""
The connection type for Session.
"""
type SessionConnection {
  """
  A list of edges.
  """
  edges: [SessionEdge!]!

  """
  A list of nodes.
  """
  nodes: [Session!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type SessionEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Session
}

type Singer {
  bio: String
  birthDate: ISO8601Date
  deathDate: ISO8601Date
  firstName: String
  id: ID
  lastName: String
  name: String
  photoUrl: String
  rank: Int
  recording(id: ID!): Recording!
  recordingSinger(id: ID!): RecordingSinger!
  recordingSingers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingSingerConnection!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  slug: String
  soloist: Boolean!
  sortName: String
}

"""
The connection type for Singer.
"""
type SingerConnection {
  """
  A list of edges.
  """
  edges: [SingerEdge!]!

  """
  A list of nodes.
  """
  nodes: [Singer!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type SingerEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Singer
}

type TransferAgent {
  audioTransfer(id: ID!): AudioTransfer!
  audioTransfers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioTransferConnection!
  audioVariant(id: ID!): AudioVariant!
  audioVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): AudioVariantConnection!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  name: String!
  recording(id: ID!): Recording!
  recordings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RecordingConnection!
  updatedAt: ISO8601DateTime!
  url: String
}

"""
Autogenerated input type of UpdatePlaylist
"""
input UpdatePlaylistInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  description: String
  id: ID!
  image: Upload
  public: Boolean
  title: String
}

"""
Autogenerated return type of UpdatePlaylist.
"""
type UpdatePlaylistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  playlist: Playlist
  success: Boolean
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  avatar: Upload

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
  firstName: String
  lastName: String
  password: String
}

"""
Autogenerated return type of UpdateUser.
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  success: Boolean
  user: User
}

scalar Upload

type User {
  admin: Boolean!
  avatarUrl: String
  createdAt: ISO8601DateTime!
  email: String!
  event(id: ID!): Event!
  events(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): EventConnection!
  firstName: String
  id: ID!
  lastName: String
  like(id: ID!): Like!
  likes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LikeConnection!
  name: String!
  passwordDigest: String!
  playback(id: ID!): Playback!
  playbacks(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaybackConnection!
  playlist(id: ID!): Playlist!
  playlists(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): PlaylistConnection!
  provider: String
  session(id: ID!): Session!
  sessions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): SessionConnection!
  uid: String
  updatedAt: ISO8601DateTime!
  username: String
  verified: Boolean!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  A list of nodes.
  """
  nodes: [User!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}

type ValidationErrors {
  details: String!
  fullMessages: [String!]!
}

type Waveform {
  audioTransfer: AudioTransfer!
  audioTransferId: String!
  bits: Int!
  channels: Int!
  createdAt: ISO8601DateTime!
  data: [Float!]!
  id: ID!
  imageUrl: String
  length: Int!
  sampleRate: Int!
  samplesPerPixel: Int!
  updatedAt: ISO8601DateTime!
  version: Int!
}
