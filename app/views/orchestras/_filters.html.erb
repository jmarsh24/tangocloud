<div class="flex flex-col gap-4">
  <% if @orchestra_periods.any? %>
    <div class="flex flex-col gap-1">
      <h2 class="text-sm font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wide">Periods</h2>
      <div class="flex gap-2 overflow-x-auto no-scrollbar whitespace-nowrap flex-nowrap">
        <% @orchestra_periods.each do |period| %>
          <% selected = @filters[:orchestra_period] == period.slug %>
          <% new_filters = selected ? @filters.except(:orchestra_period) : @filters.merge(orchestra_period: period.slug) %>
          <%= link_to orchestra_path(@orchestra, params: new_filters), data: { turbo_stream: true }, class: "px-2 py-1 rounded-full text-xs md:text-sm transition #{selected ? 'bg-orange-500 text-white' : 'bg-neutral-100 text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'}" do %>
            <span class="flex items-center gap-1">
              <%= period.name %>
              <% if selected %>
                <%= heroicon "x-mark", size: :xs %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
  <% if @singers.any? %>
    <div class="flex flex-col gap-1">
      <h2 class="text-sm font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wide">Singers</h2>
      <div class="flex gap-2 overflow-x-auto no-scrollbar whitespace-nowrap flex-nowrap">
        <% @singers.each do |singer| %>
          <% selected = @filters[:singer] == singer.slug %>
          <% new_filters = selected ? @filters.except(:singer) : @filters.merge(singer: singer.slug) %>
          <%= link_to orchestra_path(@orchestra, params: new_filters), data: { turbo_stream: true }, class: "px-2 py-1 rounded-full text-xs md:text-sm transition #{selected ? 'bg-orange-500 text-white' : 'bg-neutral-100 text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'}" do %>
            <span class="flex items-center gap-1">
              <%= singer.display_name %>
              <% if selected %>
                <%= heroicon "x-mark", size: :xs %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
  <% if @years.any? %>
    <div class="flex flex-col gap-1">
      <h2 class="text-sm font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wide">Years</h2>
      <div class="flex gap-2 overflow-x-auto no-scrollbar whitespace-nowrap flex-nowrap">
        <% @years.each do |year| %>
          <% selected = @filters[:year].to_s == year.to_s %>
          <% new_filters = selected ? @filters.except(:year) : @filters.merge(year: year) %>
          <%= link_to orchestra_path(@orchestra, params: new_filters), data: { turbo_stream: true }, class: "px-2 py-1 rounded-full text-xs md:text-sm transition #{selected ? 'bg-orange-500 text-white' : 'bg-neutral-100 text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'}" do %>
            <span class="flex items-center gap-1">
              <%= year %>
              <% if selected %>
                <%= heroicon "x-mark", size: :xs %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
  <% if @genres.any? %>
    <div class="flex flex-col gap-1">
      <h2 class="text-sm font-medium text-neutral-500 dark:text-neutral-400 uppercase tracking-wide">Genres</h2>
      <div class="flex gap-2 overflow-x-auto no-scrollbar whitespace-nowrap flex-nowrap">
        <% @genres.each do |genre| %>
          <% selected = @filters[:genre] == genre.slug %>
          <% new_filters = selected ? @filters.except(:genre) : @filters.merge(genre: genre.slug) %>
          <%= link_to orchestra_path(@orchestra, params: new_filters), data: { turbo_stream: true }, class: "px-2 py-1 rounded-full text-xs md:text-sm transition #{selected ? 'bg-orange-500 text-white' : 'bg-neutral-100 text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300 hover:bg-neutral-200 dark:hover:bg-neutral-700'}" do %>
            <span class="flex items-center gap-1">
              <%= genre.name %>
              <% if selected %>
                <%= heroicon "x-mark", size: :xs %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>
  <div class="flex">
    <% if filters_active = @filters.any? %>
      <%= link_to orchestra_path(@orchestra),
        data: { turbo_stream: true },
        class: "px-3 py-1 rounded-full text-xs md:text-sms bg-red-500 text-white hover:bg-red-600 transition" do %>
        <span class="flex items-center gap-1">
          <%= heroicon "x-mark", size: :xs %>
          Clear All Filters
        </span>
      <% end %>
    <% else %>
      <div class="px-3 py-1 rounded-full text-xs md:text-sms opacity-0">
        <span class="flex items-center gap-1">
          <%= heroicon "x-mark", size: :xs %>
          Clear All Filters
        </span>
      </div>
    <% end %>
  </div>
  <div class="flex justify-end px-2">
    <div class="flex items-center gap-2">
      <%= link_to orchestra_path(@orchestra, @filters.merge(sort: "popularity", order: @filters[:sort] == "popularity" && @filters[:order] == "asc" ? "desc" : "asc")), 
      class: class_names(
        "flex items-center gap-1 px-2 py-1 rounded-md text-sm font-medium bg-neutral-200 text-neutral-700 hover:bg-neutral-300",
        "dark:bg-neutral-800 dark:text-neutral-400 dark:hover:bg-neutral-700",
        { "dark:bg-neutral-600 text-white": @filters[:sort].nil? || @filters[:sort] == "popularity" }
      ) do %>
        Popularity
        <% if @filters[:sort].nil? || @filters[:sort] == "popularity" %>
          <%= heroicon @filters[:order] == "asc" ? "chevron-up" : "chevron-down", size: :xs %>
        <% end %>
      <% end %>
      <%= link_to orchestra_path(@orchestra, @filters.merge(sort: "year", order: @filters[:sort] == "year" && @filters[:order] == "asc" ? "desc" : "asc")), 
      class: class_names(
        "flex items-center gap-1 px-2 py-1 rounded-md text-sm font-medium bg-neutral-200 text-neutral-700 hover:bg-neutral-300",
        "dark:bg-neutral-800 dark:text-neutral-400 dark:hover:bg-neutral-700",
        { "dark:bg-neutral-600 text-white": @filters[:sort] == "year" }
      ) do %>
        Year
        <% if @filters[:sort] == "year" %>
          <%= heroicon @filters[:order] == "asc" ? "chevron-up" : "chevron-down", size: :xs %>
        <% end %>
      <% end %>
    </div>
  </div>
</div>
