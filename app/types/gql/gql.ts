/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n  mutation AddLikeToRecording($recordingId: ID!) {\n    addLikeToRecording(input: { recordingId: $recordingId }) {\n      like {\n        id\n        likeableType\n        likeableId\n        user {\n          id\n        }\n      }\n      success\n      errors\n    }\n  }\n": types.AddLikeToRecordingDocument,
    "\n\tmutation appleLogin(\n\t\t$userIdentifier: String!\n\t\t$identityToken: String!\n\t\t$email: String\n\t\t$firstName: String\n\t\t$lastName: String\n\t) {\n\t\tappleLogin(\n\t\t\tinput: {\n\t\t\t\tuserIdentifier: $userIdentifier\n\t\t\t\tidentityToken: $identityToken\n\t\t\t\temail: $email\n\t\t\t\tfirstName: $firstName\n\t\t\t\tlastName: $lastName\n\t\t\t}\n\t\t) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n": types.AppleLoginDocument,
    "\n  mutation CreatePlayback($recordingId: ID!) {\n    createPlayback(input: { recordingId: $recordingId }) {\n      playback {\n        id\n        recording {\n          id\n        }\n      }\n    }\n  }\n": types.CreatePlaybackDocument,
    "\n\tmutation googleLogin($idToken: String!) {\n\t\tgoogleLogin(input: { idToken: $idToken }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n": types.GoogleLoginDocument,
    "\n  mutation login($login: String!, $password: String!) {\n    login(input: { login: $login, password: $password }) {\n      user {\n        id\n        username\n        email\n      }\n      token\n    }\n  }\n": types.LoginDocument,
    "\n\tmutation Register($username: String!, $email: String!, $password: String!) {\n\t\tregister(input: { username: $username, email: $email, password: $password }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t}\n\t}\n": types.RegisterDocument,
    "\n  mutation RemoveLikeFromRecording($recordingId: ID!) {\n    removeLikeFromRecording(input: { recordingId: $recordingId }) {\n      success\n      errors\n    }\n  }\n": types.RemoveLikeFromRecordingDocument,
    "\n\tquery Composer($id: ID!) {\n\t\tcomposer(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.ComposerDocument,
    "\n\tquery Composers($query: String) {\n\t\tcomposers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.ComposersDocument,
    "\n\tquery CurrentUser {\n\t\tcurrentUser {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\tname\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tverified\n\t\t\tadmin\n\t\t\tavatarUrl\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tplaybacks {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\trecording {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.CurrentUserDocument,
    "\n\tquery LikedRecordings {\n\t\trecordings {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tyear\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.LikedRecordingsDocument,
    "\n\tquery Lyricist($id: ID!) {\n\t\tlyricist(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.LyricistDocument,
    "\n\tquery Lyricists($query: String) {\n\t\tlyricists(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.LyricistsDocument,
    "\n\tquery Orchestra($id: ID!) {\n\t\torchestra(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.OrchestraDocument,
    "\n\tquery Orchestras($query: String) {\n\t\torchestras(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t\trecordingsCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.OrchestrasDocument,
    "\n\tquery Playlists($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n": types.PlaylistsDocument,
    "\n\tquery Recording($id: ID!) {\n\t\trecording(id: $id) {\n\t\t\taudioTransfers {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.RecordingDocument,
    "\n\tquery Recordings($query: String, $sortBy: String, $order: String, $first: Int, $after: String) {\n\t\trecordings(query: $query, sortBy: $sortBy, order: $order, first: $first, after: $after) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\trecordedDate\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tyear\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n": types.RecordingsDocument,
    "\n\tquery Singer($id: ID!) {\n\t\tsinger(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.SingerDocument,
    "\n\tquery Singers($query: String) {\n\t\tsingers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.SingersDocument,
    "\n\tquery TandaOfTheWeek($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t\tplaylistItems {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tplayable {\n\t\t\t\t\t\t\t\t\t... on Recording {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n": types.TandaOfTheWeekDocument,
    "\n\tquery User($id: ID!) {\n\t\tuser(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\tusername\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tadmin\n\t\t}\n\t}\n": types.UserDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation AddLikeToRecording($recordingId: ID!) {\n    addLikeToRecording(input: { recordingId: $recordingId }) {\n      like {\n        id\n        likeableType\n        likeableId\n        user {\n          id\n        }\n      }\n      success\n      errors\n    }\n  }\n"): (typeof documents)["\n  mutation AddLikeToRecording($recordingId: ID!) {\n    addLikeToRecording(input: { recordingId: $recordingId }) {\n      like {\n        id\n        likeableType\n        likeableId\n        user {\n          id\n        }\n      }\n      success\n      errors\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation appleLogin(\n\t\t$userIdentifier: String!\n\t\t$identityToken: String!\n\t\t$email: String\n\t\t$firstName: String\n\t\t$lastName: String\n\t) {\n\t\tappleLogin(\n\t\t\tinput: {\n\t\t\t\tuserIdentifier: $userIdentifier\n\t\t\t\tidentityToken: $identityToken\n\t\t\t\temail: $email\n\t\t\t\tfirstName: $firstName\n\t\t\t\tlastName: $lastName\n\t\t\t}\n\t\t) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation appleLogin(\n\t\t$userIdentifier: String!\n\t\t$identityToken: String!\n\t\t$email: String\n\t\t$firstName: String\n\t\t$lastName: String\n\t) {\n\t\tappleLogin(\n\t\t\tinput: {\n\t\t\t\tuserIdentifier: $userIdentifier\n\t\t\t\tidentityToken: $identityToken\n\t\t\t\temail: $email\n\t\t\t\tfirstName: $firstName\n\t\t\t\tlastName: $lastName\n\t\t\t}\n\t\t) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation CreatePlayback($recordingId: ID!) {\n    createPlayback(input: { recordingId: $recordingId }) {\n      playback {\n        id\n        recording {\n          id\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation CreatePlayback($recordingId: ID!) {\n    createPlayback(input: { recordingId: $recordingId }) {\n      playback {\n        id\n        recording {\n          id\n        }\n      }\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation googleLogin($idToken: String!) {\n\t\tgoogleLogin(input: { idToken: $idToken }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation googleLogin($idToken: String!) {\n\t\tgoogleLogin(input: { idToken: $idToken }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t\ttoken\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation login($login: String!, $password: String!) {\n    login(input: { login: $login, password: $password }) {\n      user {\n        id\n        username\n        email\n      }\n      token\n    }\n  }\n"): (typeof documents)["\n  mutation login($login: String!, $password: String!) {\n    login(input: { login: $login, password: $password }) {\n      user {\n        id\n        username\n        email\n      }\n      token\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation Register($username: String!, $email: String!, $password: String!) {\n\t\tregister(input: { username: $username, email: $email, password: $password }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation Register($username: String!, $email: String!, $password: String!) {\n\t\tregister(input: { username: $username, email: $email, password: $password }) {\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t\tusername\n\t\t\t\temail\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  mutation RemoveLikeFromRecording($recordingId: ID!) {\n    removeLikeFromRecording(input: { recordingId: $recordingId }) {\n      success\n      errors\n    }\n  }\n"): (typeof documents)["\n  mutation RemoveLikeFromRecording($recordingId: ID!) {\n    removeLikeFromRecording(input: { recordingId: $recordingId }) {\n      success\n      errors\n    }\n  }\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Composer($id: ID!) {\n\t\tcomposer(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Composer($id: ID!) {\n\t\tcomposer(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Composers($query: String) {\n\t\tcomposers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Composers($query: String) {\n\t\tcomposers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery CurrentUser {\n\t\tcurrentUser {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\tname\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tverified\n\t\t\tadmin\n\t\t\tavatarUrl\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tplaybacks {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\trecording {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery CurrentUser {\n\t\tcurrentUser {\n\t\t\tid\n\t\t\temail\n\t\t\tusername\n\t\t\tname\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tverified\n\t\t\tadmin\n\t\t\tavatarUrl\n\t\t\tcreatedAt\n\t\t\tupdatedAt\n\t\t\tplaybacks {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\trecording {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery LikedRecordings {\n\t\trecordings {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tyear\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery LikedRecordings {\n\t\trecordings {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tyear\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Lyricist($id: ID!) {\n\t\tlyricist(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Lyricist($id: ID!) {\n\t\tlyricist(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tcompositions {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\trecordings {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Lyricists($query: String) {\n\t\tlyricists(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Lyricists($query: String) {\n\t\tlyricists(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Orchestra($id: ID!) {\n\t\torchestra(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Orchestra($id: ID!) {\n\t\torchestra(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Orchestras($query: String) {\n\t\torchestras(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t\trecordingsCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Orchestras($query: String) {\n\t\torchestras(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t\trecordingsCount\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Playlists($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Playlists($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Recording($id: ID!) {\n\t\trecording(id: $id) {\n\t\t\taudioTransfers {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Recording($id: ID!) {\n\t\trecording(id: $id) {\n\t\t\taudioTransfers {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Recordings($query: String, $sortBy: String, $order: String, $first: Int, $after: String) {\n\t\trecordings(query: $query, sortBy: $sortBy, order: $order, first: $first, after: $after) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\trecordedDate\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tyear\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Recordings($query: String, $sortBy: String, $order: String, $first: Int, $after: String) {\n\t\trecordings(query: $query, sortBy: $sortBy, order: $order, first: $first, after: $after) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\trecordedDate\n\t\t\t\t\torchestra {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tsingers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgenre {\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t\tcomposition {\n\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tyear\n\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Singer($id: ID!) {\n\t\tsinger(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Singer($id: ID!) {\n\t\tsinger(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\tphotoUrl\n\t\t\trecordings {\n\t\t\t\tedges {\n\t\t\t\t\tnode {\n\t\t\t\t\t\tid\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tyear\n\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery Singers($query: String) {\n\t\tsingers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery Singers($query: String) {\n\t\tsingers(query: $query) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tphotoUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TandaOfTheWeek($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t\tplaylistItems {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tplayable {\n\t\t\t\t\t\t\t\t\t... on Recording {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TandaOfTheWeek($query: String, $first: Int) {\n\t\tplaylists(query: $query, first: $first) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t\tdescription\n\t\t\t\t\timageUrl\n\t\t\t\t\tplaylistItems {\n\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\tplayable {\n\t\t\t\t\t\t\t\t\t... on Recording {\n\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t\t\t\t\tyear\n\t\t\t\t\t\t\t\t\t\tgenre {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\torchestra {\n\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsingers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcomposition {\n\t\t\t\t\t\t\t\t\t\t\tlyrics {\n\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocale\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\taudioTransfers {\n\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\t\t\t\t\t\taudioVariants {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tedges {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taudioFileUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tduration\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\talbum {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talbumArtUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpageInfo {\n\t\t\t\tendCursor\n\t\t\t\tstartCursor\n\t\t\t\thasNextPage\n\t\t\t\thasPreviousPage\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery User($id: ID!) {\n\t\tuser(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\tusername\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tadmin\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery User($id: ID!) {\n\t\tuser(id: $id) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\tusername\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tadmin\n\t\t}\n\t}\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;