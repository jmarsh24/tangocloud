# Name of your application. Used to uniquely configure containers.
service: tangocloud

# Name of the container image.
image: jmarsh24/tangocloud

# Deploy to these servers.
servers:
  web:
    - 37.27.221.99
  # worker configuration using the `cmd` key for job processing
  job:
    hosts:
    - 37.27.221.99
    cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# Set ssl: false if using something like Cloudflare to terminate SSL (but keep host!).
proxy:
  ssl: false
  forward_headers: true
  hosts:
    - www.tangocloud.app
    - tangocloud.app
  # kamal-proxy connects to your container over port 80, use `app_port` to specify a different port.
  app_port: 3000
  healthcheck:
    path: /up
    interval: 3
    timeout: 30

# Credentials for your image host.
registry:
  server: ghcr.io
  username: jmarsh24
  # Always use an access token rather than real password (pulled from .kamal/secrets).
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: arm64
  cache:
    type: registry
    options: mode=max,image-manifest=true,oci-mediatypes=true

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    RUBY_YJIT_ENABLE: 1
    WEB_CONCURRENCY: 2
    RAILS_MAX_THREADS: 3
    SOLID_QUEUE_IN_PUMA: true
    DB_HOST: tangocloud-db
    ELASTICSEARCH_URL: http://tangocloud-elasticsearch:9200
    EL_RECODO_REQUEST_DELAY: 20
    REDIS_HOST: tangocloud-redis
    CLOUDFLARE_BUCKET: tangocloud
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - REDIS_PASSWORD
    - CLOUDFLARE_ACCOUNT_ID
    - CLOUDFLARE_ACCESS_KEY_ID
    - CLOUDFLARE_SECRET_ACCESS_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"
  backup: accessory exec --reuse --interactive backup "sh backup.sh"

# Use a different ssh user than root
ssh:
  user: nerd

# Use a persistent storage volume.
#
volumes:
  - /srv/tangocloud/synced_files/tc_tagged_library:/app/music_library
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

logging:
  options:
    max-size: 100m

# Use accessory services (secrets come from .kamal/secrets).
accessories:
  db:
    image: postgres:15
    host: 37.27.221.99
    env:
      clear:
        POSTGRES_USER: postgres
      secret:
        - POSTGRES_PASSWORD
    files:
      - config/init.sql:/docker-entrypoint-initdb.d/setup.sql
      - postgres/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
    directories:
      - data:/var/lib/postgresql/data
  backup:
    image: eeshugerman/postgres-backup-s3:15
    host: 37.27.221.99
    env:
      clear:
        S3_ENDPOINT: https://b23e5ff0654b18a5b20bd3016cc32b35.r2.cloudflarestorage.com/
        S3_BUCKET: tangocloud-db-backups
        S3_PREFIX: backups
        S3_REGION: auto
        SCHEDULE: "@daily"
        BACKUP_KEEP_DAYS: 14
        POSTGRES_HOST: tangocloud-db
        POSTGRES_DATABASE: tangocloud_production
        POSTGRES_USER: postgres
      secret:
        - POSTGRES_PASSWORD
        - S3_ACCESS_KEY_ID
        - S3_SECRET_ACCESS_KEY
  redis:
    image: redis:7
    host: 37.27.221.99
    directories:
      - data:/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0-arm64
    host: 37.27.221.99
    port: 9200
    env:
      clear:
        discovery.type: single-node
        xpack.security.enabled: "false"
        ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    files:
      - config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    volumes:
      - /var/lib/elasticsearch/data:/usr/share/elasticsearch/data
